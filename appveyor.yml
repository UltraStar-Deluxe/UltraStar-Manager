version: 1.8.3.{build}

branches:
  only:
    - master

environment:
  global:
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    APPVEYOR_CACHE_ENTRY_ZIP_ARGS: -t7z -m0=lzma -mx=4
    APPVEYOR_RDP_PASSWORD: UltraStar-Manager!
  matrix:
    # Windows
    - ARCH: x64
      COMPILER: MinGW
      QTDIR: C:\Qt\5.15.2\mingw81_64
    # macOS
    - ARCH: x64
      COMPILER: Clang
    # Ubuntu
    - ARCH: x64
      COMPILER: GCC

image:
  # AppVeyor builds are ordered by the image list:
  - Visual Studio 2019
  - macos
  - Ubuntu1604

matrix:
  exclude:
    # Exclude invalid options
    - image: Visual Studio 2019
      COMPILER: Clang
    - image: Visual Studio 2019
      COMPILER: GCC
    - image: macos
      COMPILER: MinGW
    - image: macos
      COMPILER: GCC
    - image: Ubuntu1604
      COMPILER: MinGW
    - image: Ubuntu1604
      COMPILER: Clang

for:
  # Windows (MinGW)
  -
    matrix:
      only:
        - image: Visual Studio 2019

    clone_folder: C:\UltraStar-Manager

    init:
      - cmd: git config --global core.autocrlf input
      - cmd: echo NUMBER_OF_PROCESSORS=%NUMBER_OF_PROCESSORS%
      - cmd: echo PROCESSOR_IDENTIFIER=%PROCESSOR_IDENTIFIER%
      - cmd: echo QTDIR=%QTDIR%
      - cmd: echo CMAKE_GENERATOR=%CMAKE_GENERATOR%
      - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

    install:
      - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
      - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
      # Qt 5.15.2 windeployqt has a bug, so use a custom version of windeployqt
      - cmd: appveyor DownloadFile http://tripleboot.org/Uploads/windeployqt64releaseonly.zip
      - cmd: 7z e windeployqt64releaseonly.zip -o%QTDIR%\..\..\Tools\mingw810_64\bin

    before_build:
      - cmd: set PATH=%QTDIR%\bin;%QTDIR%\..\..\Tools\mingw810_64\bin;C:\Program Files (x86)\NSIS\;%PATH%
      - cmd: echo PATH=%PATH%

    build_script:
      - cmd: cd C:\UltraStar-Manager
      - cmd: cd src\plugins\audiotag\
      - cmd: qmake audiotag.pro -spec win32-g++
      - cmd: mingw32-make -j%NUMBER_OF_PROCESSORS%
      - cmd: cd ..\cleanup\
      - cmd: qmake cleanup.pro -spec win32-g++
      - cmd: mingw32-make -j%NUMBER_OF_PROCESSORS%
      - cmd: cd ..\lyric\
      - cmd: qmake lyric.pro -spec win32-g++
      - cmd: mingw32-make -j%NUMBER_OF_PROCESSORS%
      - cmd: cd ..\preparatory\
      - cmd: qmake preparatory.pro -spec win32-g++
      - cmd: mingw32-make -j%NUMBER_OF_PROCESSORS%
      - cmd: cd ..\rename\
      - cmd: qmake rename.pro -spec win32-g++
      - cmd: mingw32-make -j%NUMBER_OF_PROCESSORS%
      - cmd: cd ..\..\
      - cmd: qmake UltraStar-Manager.pro -spec win32-g++
      - cmd: mingw32-make -j%NUMBER_OF_PROCESSORS%

    after_build:
      - cmd: makensis ../setup/win64/UltraStar-Manager.nsi

    artifacts:
      - path: bin\release
        name: UltraStar-Manager-portable
        type: zip
      - path: bin\UltraStar-Manager*-setup.exe
        name: UltraStar-Manager-installer

    on_failure:
      # Change false to true to block build and investigate build failures
      - ps: $blockRdp = $false; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

  # Mac
  -
    matrix:
      only:
        - image: macos

    clone_folder: ~/UltraStar-Manager

    init:
      - sh: echo _NPROCESSORS_ONLN=$(getconf _NPROCESSORS_ONLN)
      - sh: export PATH=$HOME/Qt/latest/clang_64/bin:/usr/local/bin:$PATH
      - sh: set PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig"

    install:
      - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
      - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
      - brew update
      - brew install taglib;
      - brew install mediainfo;
      - brew install create-dmg;

    build_script:
      - cd src/plugins/audiotag/
      - qmake audiotag.pro
      - make -j$(getconf _NPROCESSORS_ONLN)
      - cd ../cleanup/
      - qmake cleanup.pro
      - make -j$(getconf _NPROCESSORS_ONLN)
      - cd ../lyric/
      - qmake lyric.pro
      - make -j$(getconf _NPROCESSORS_ONLN)
      - cd ../preparatory/
      - qmake preparatory.pro
      - make -j$(getconf _NPROCESSORS_ONLN)
      - cd ../rename/
      - qmake rename.pro
      - make -j$(getconf _NPROCESSORS_ONLN)
      - cd ../../
      - qmake UltraStar-Manager.pro
      - make -j$(getconf _NPROCESSORS_ONLN)
      - cd ../bin/release/
      - ls

    artifacts:
      - path: bin/release
        name: UltraStar-Manager portable
        type: zip
      - path: bin/release/UltraStar-Manager.dmg
        name: UltraStar-Manager disk image

  # Ubuntu (AppImage)
  -
    matrix:
      only:
        - image: Ubuntu1604

    clone_folder: ~/UltraStar-Manager

    init:
      - sh: echo _NPROCESSORS_ONLN=$(getconf _NPROCESSORS_ONLN)
      - sh: export PATH=$HOME/Qt/latest/gcc_64/bin:$PATH

    install:
      - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
      - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
      - sh: sudo apt update -qq
      - sh: sudo apt install -y libgl1-mesa-dev build-essential
      # UltraStar-Manager needs these:
      - sh: sudo apt install -y libtag1-dev libcld2-dev libmediainfo-dev
      # linuxdeployqt needs these:
      - sh: sudo apt install -y libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb-dev libxkbcommon-x11-0 libgtk2.0-dev
      # build qtstyleplugins with gtk2.0
      #- sh: git clone https://code.qt.io/qt/qtstyleplugins.git && cd qtstyleplugins && qmake && make -j$(nproc) && sudo make install && cd -

    build_script:
      - sh: cd src
      - sh: qmake UltraStar-Manager.pro
      - sh: make -j$(getconf _NPROCESSORS_ONLN)
      - sh: cd ../bin/release

      - sh: cd src/plugins/audiotag/
      - sh: qmake audiotag.pro
      - sh: make -j4
      - sh: cd ../cleanup/
      - sh: qmake cleanup.pro
      - sh: make -j4
      - sh: cd ../lyric/
      - sh: qmake lyric.pro
      - sh: make -j4
      - sh: cd ../preparatory/
      - sh: qmake preparatory.pro
      - sh: make -j4
      - sh: cd ../rename/
      - sh: qmake rename.pro
      - sh: make -j4
      - sh: cd ../../
      - sh: qmake UltraStar-Manager.pro
      - sh: make -j4
      - sh: cd ../bin/release/
      # Build AppImage
      #- sh: wget https://github.com/probonopd/linuxdeployqt/releases/download/5/linuxdeployqt-5-x86_64.AppImage # linuxdeployqt 5
      #- sh: wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage # linuxdeployqt 6
      #- sh: wget https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage # linuxdeployqt 7
      - sh: wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
      - sh: chmod a+x linuxdeployqt*.AppImage
      - sh: unset QTDIR
      - sh: unset QT_PLUGIN_PATH
      - sh: unset LD_LIBRARY_PATH
      - sh: cp ../../setup/unix/UltraStar-Manager.desktop .
      - sh: cp ../../setup/unix/UltraStar-Manager.png .
      - sh: ./linuxdeployqt*.AppImage UltraStar-Manager.desktop -bundle-non-qt-libs -appimage

    artifacts:
      - path: bin/release/UltraStar-Manager-*.AppImage
        name: UltraStar-Manager AppImage Package
